{
  "name": "Africa's Talking Laravel 5 API Package",
  "tagline": "A Laravel 5 package for integrating Africa's Talking Services to your Laravel Web Application.",
  "body": "## Introduction\r\nThe Africa's Talking Laravel 5 API package is an easy to use package for Laravel that adds the capability to send and receive SMS messages to your Laravel web application. \r\nThis package allows you to use:\r\n* Text Message Methods\r\n* Subscription Services Methods \r\n* Call methods\r\n* Airtime methods\r\n* User info methods\r\n\r\n## Official Documentation\r\nThis Africa's Talking Laravel 5 API package Documentation can be found [here](https://freddiedfre.github.io/AfricasTalkingLaravel5).\r\n\r\n## Requirements\r\n1. **PHP 5.6+**\r\n2. **Laravel 5.2+**\r\n\r\n## Configuration\r\n### Composer\r\nRun the following command on the terminal at root folder of your project:\r\n```php\r\n$ composer require freddiedfre/africas_talking_laravel_5=dev-master\r\n```\r\n### Service Provider\r\nNext, you will need to register the service provider with Laravel by adding the service provider by modifying the providers array in `config/app.php`:\r\n```php\r\n'providers' => [\r\n    //...\r\n    'FreddieDfre\\AfricasTalkingLaravel5\\AfricasTalkingLaravel5ServiceProvider::class,'\r\n],\r\n```\r\n\r\n### Aliases\r\nFinally, register the Facade.\r\nAdd \r\n```php\r\n'SMSProvider' => FreddieDfre\\AfricasTalkingLaravel5\\AfricasTalkingLaravel5Facade::class\r\n```\r\nin your `config/app.php` configuration file within the aliases array.\r\n\r\n### API Settings\r\nYou must run the following command to save your configuration files to your local app:\r\n```bash\r\n$ php artisan vendor:publish\r\n```\r\n### Driver Configuration\r\nNavigate to `config/AfricastalkingGateway.php` and fill in your username and api_key that you will get from your AfricasTalking Dashboard under the `settings tab->API KEY` on the [AfricasTalking website.](https://www.africastalking.com)\r\n```php\r\nreturn [`\r\n    'username' => 'Replace this text with your AfricasTalking username.',\r\n    'api_key' => 'Replace this text with your API Key obtained from AfricasTalking.',`\r\n    `];\r\n```\r\n\r\n## Usage\r\n### Basic Usage\r\nThis package operates in much of the same way as the Laravel Mail service provider. If you are familiar with this then the basic usage should feel like home. \r\n\r\nAlways make sure to include the `use SMSProvider;` at the top of every controller where you intend to use this package. Then in your controller functions, below is the the most basic way to handle the Africas Talking methods:\r\n* Text Message Methods\r\n```php\r\nSMSProvider::sendMessage($phoneno, $message);\r\nSMSProvider::sendMessage($to_, $message_, $from_ = null, $bulkSMSMode_ = 1, Array $options_ = array());\r\nSMSProvider::fetchMessages($lastReceivedId_);\r\n```\r\n* Subscription Services Methods\r\n```php\r\nSMSProvider::createSubscription($phoneNumber_, $shortCode_, $keyword_);\r\nSMSProvider::deleteSubscription($phoneNumber_, $shortCode_, $keyword_);\r\nSMSProvider::fetchPremiumSubscriptions($shortCode_, $keyword_, $lastReceivedId_ = 0);\r\nSMSProvider::getNumQueuedCalls($phoneNumber_, $queueName = null);\r\n```\r\n* Call methods\r\n```php\r\nSMSProvider::call($from_, $to_);\r\nSMSProvider::getNumQueuedCalls($phoneNumber_, $queueName = null);\r\nSMSProvider::uploadMediaFile($url_);\r\n```\r\n* Airtime method\r\n```php\r\nSMSProvider::sendAirtime($recipients);\r\n```\r\n* User Info method\r\n```php\r\nSMSProvider::getUserData();\r\n```\r\n\r\n## Licence\r\nThis package is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT).\r\n\r\n## Contributing \r\nA great way to say thanks!\r\n\r\n1. Report a bug.\r\n2. Report a security issue.\r\n3. Contribute to this project.\r\n\r\nFork this project, make your changes, and submit a pull request. It's that easy. Cheers.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}